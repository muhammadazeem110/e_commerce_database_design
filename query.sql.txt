CREATE database e_commerce;
USE e_commerce;

CREATE TABLE site_user(
	user_id INT PRIMARY KEY,
    user_name VARCHAR(100),
    email VARCHAR(100) NOT NULL,
    password_hash VARCHAR(100)
);

CREATE TABLE user_address(
	user_id INT,
    address_id INT,
    is_default TINYINT(1)
);

CREATE TABLE address(
	id INT PRIMARY KEY,
    house_no VARCHAR(100),
    street_no INT,
    city INT,
    postal_code INT,
    country_id INT,
    FOREIGN KEY(country_id) REFERENCES country(id)
);

CREATE TABLE country(
	id INT PRIMARY KEY,
    country_code INT,
    country_name VARCHAR(100)
);

CREATE TABLE user_review(
	id INT PRIMARY KEY,
    order_product_id INT,
    rating INT,
    comment VARCHAR(500),
    FOREIGN KEY(id) REFERENCES site_user(user_id)
);

CREATE TABLE payment_detail(
	id INT PRIMARY KEY,
    card_number INT,
    card_name VARCHAR(100),
    empiry_date DATE
);

CREATE TABLE payment_method(
	id INT PRIMARY KEY,
    user_id INT,
    payment_id INT,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES site_user(user_id)
);

CREATE TABLE product_category(
	id INT PRIMARY KEY,
    parent_category_id INT,
    category_name VARCHAR(100)
);

CREATE TABLE product(
	product_id INT PRIMARY KEY,
    product_name VARCHAR(100),
    category_id INT,
    description VARCHAR(500),
    image_path VARCHAR(250),
    qty_in_stock INT,
    price FLOAT,
    FOREIGN KEY (category_id) REFERENCES product_category(id)
);

CREATE TABLE promotion(
	id INT PRIMARY KEY,
    name VARCHAR(100),
    discount INT,
    start_date DATE,
    end_date DATE,
    FOREIGN KEY (id) REFERENCES product(product_id)
);

CREATE TABLE variation(
	id INT PRIMARY KEY,
    product_id INT, 
    name VARCHAR(100),
    value VARCHAR(100),
    FOREIGN KEY (product_id) REFERENCES product(product_id)
);

CREATE TABLE shopping_card(
	id INT PRIMARY KEY,
    user_id INT,
    card_id INT,
    product_id INT,
    qty INT,
    FOREIGN KEY (user_id) REFERENCES site_user(user_id),
    FOREIGN KEY (card_id) REFERENCES payment_detail(id),
    FOREIGN KEY (product_id) REFERENCES product(product_id)
);

CREATE TABLE orders (
    order_id INT PRIMARY KEY,     
    user_id INT,     
    order_date DATE,     
    payment_method_id INT,     
    order_total INT,     
    order_status_id INT,     
    product_id INT,     
    shipping_address_id INT,     
    FOREIGN KEY (payment_method_id) REFERENCES payment_method(id),
    FOREIGN KEY (user_id) REFERENCES site_user(user_id),     
    FOREIGN KEY (product_id) REFERENCES product(product_id),     
    FOREIGN KEY (shipping_address_id) REFERENCES address(id) 
);

CREATE TABLE status(
	status_id INT PRIMARY KEY,
    status VARCHAR(100)
);

ALTER TABLE orders ADD FOREIGN KEY (order_status_id) REFERENCES status(status_id);

SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE, IS_NULLABLE, COLUMN_KEY, EXTRA
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'e_commerce';
